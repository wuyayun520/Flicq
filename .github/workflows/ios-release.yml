name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/zoopIn.ipa"
          APPLE_ID: "lloydhappy222@outlook.com"
          APP_SPECIFIC_PASSWORD: "rbdn-rsrs-auvb-cumk"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
